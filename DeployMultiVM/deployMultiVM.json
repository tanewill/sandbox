{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "OSVersion": {
            "type": "string",
            "defaultValue": "15.10",
            "allowedValues": [
                "15.10",
                "7.1",
                "6.5"
            ]
        },
        "offerType": {
            "type": "string",
            "defaultValue": "ubuntuserver",
            "allowedValues": [
                "ubuntuserver",
                "CentOS",
                "CentOS-HPC"
            ]
        },
        "publisher":{
            "type":"string",
            "defaultValue": "canonical",
            "allowedValues":[
                "canonical",
                "OpenLogic"
                ]
        },
        
        "vmCount": {
            "type": "int",
            "defaultValue": 1
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "allowedValues": [
            "Basic_A4",
            "Standard_A1",
            "Standard_A8",
            "Standard_A9",
            "Standard_A10",
            "Standard_A11"
            ],
            "metadata": {
                "description": "Virtual Machine Size"
            }
        }
    },
    "variables": {
        "newStorageAccountName":"[concat(resourceGroup().name,'stor')]",
        "dnsPrefixNameForPublicIP":"[concat(resourceGroup().name,'ip')]",
        "virtualNetworkName": "[concat(resourceGroup().name,'net')]",
        "vmNamePrefix":"[concat(resourceGroup().name,'comp')]",
        "addressPrefix": "10.0.0.0/16",
        "dataDiskSize": "1023",
        "imageOffer": "[parameters('offerType')]",
        "imagePublisher": "[parameters('publisher')]",
        "nicName": "NIC",
        "OSDiskName": "osdisk",
        "publicIPAddressType": "Dynamic",
        "storageAccountType": "Standard_LRS",
        "subnetName": "Subnet",
        "subnetPrefix": "10.0.0.0/24",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
        "vmStorageAccountContainerName": "vhds",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "executeScript": "[concat(parameters('offerType'),'_',parameters('OSVersion'),'_deploy.sh')]",
        "availabilitySetName": "computeavset"
    },
    "resources": [
        {
          "type": "Microsoft.Compute/availabilitySets",
          "name": "[variables('availabilitySetName')]",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('newStorageAccountName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "StorageAccount"
            },
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('dnsPrefixNameForPublicIP'),copyIndex())]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('dnsPrefixNameForPublicIP'),copyIndex())]"
                }
            },
            "copy": {
                "name": "publicIpCopy",
                "count": "[parameters('vmCount')]"
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "VirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'),copyIndex())]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "NetworkInterface"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('dnsPrefixNameForPublicIP'),copyIndex()))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', copyIndex())]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('dnsPrefixNameForPublicIP'),copyIndex()))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicCopy",
                "count": "[parameters('vmCount')]"
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "copy": {
                "name": "nodeCopy",
                "count": "[parameters('vmCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nicName'),copyIndex()))]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('vmNamePrefix'),copyIndex())]",
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(variables('vmNamePrefix'),copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('OSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',concat(variables('OSDiskName'),copyIndex()),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "datadisk1",
                            "diskSizeGB": "[variables('dataDiskSize')]",
                            "lun": 0,
                            "vhd": {
                                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/vhds/',concat(variables('vmNamePrefix'),copyIndex()),'dataDisk1' ,'.vhd')]"
                            },
                            "caching": "None",
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),copyIndex()))]"
                        }
                    ]
                }
            },
            "tags": {
                "displayName": "VirtualMachine"
            },
            "type": "Microsoft.Compute/virtualMachines"
        },
            {
           
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmNamePrefix'),'0','/Install')]",
            "location": "[resourceGroup().location]",
            "dependsOn": ["[concat('Microsoft.Compute/virtualMachines/', variables('vmNamePrefix'),'0')]"],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.4",
                "settings": {
                "fileUris": [
                    "[concat('https://raw.githubusercontent.com/tanewill/sandbox/CentOS3/DeployMultiVM/',variables('executeScript'))]"
                ],
                "commandToExecute": "[concat('bash ',variables('executeScript'),' ',parameters('adminUsername'),' ',parameters('adminPassword'),' 10.0.0')]"
                }
            }
            }
    ]
}
